#!/bin/sh
# Nico Schottelius (nico-cinit /at/ schottelius.org)
# 2007-05-21
# Behave as being shutdown from Linux' sysvinit

# Always needed variables / functions
_0_short=${0##*/}

_eecho()
{
   echo "${_0_short}" "$@" >&2
}

_eexit()
{
   _eecho "$@"
   exit 1
}

# Program specific variables

time_t=0       # -t sec
warn_only_k=0  # -k
reboot=0       # -r
halt=0         # -h
poweroff=0     # -P
cancel=0       # -c
time=-1        # [time]
message=""     # [warning-message]

# unimplemented: -a, -H, -f, -F
# deprecated and thus not implemented: -n

# all the functions

usage()
{

cat << cinit_usage

*** cinit linux-sysvinit shutdown wrapper ***

Usage   shutdown [-akrhHPfnc] [-t secs] time [warning message]
        -a:      use /etc/shutdown.allow
        -k:      don't really shutdown, only warn.
        -r:      reboot after shutdown.
        -h:      halt after shutdown.
        -P:      halt action is to turn off power.
        -H:      halt action is to just halt.
        -f:      do a 'fast' reboot (skip fsck).
        -F:      Force fsck on reboot.
        -n:      do not go through "init" but go down real fast.
        -c:      cancel a running shutdown.
        -t secs: delay between warning and kill signal.
        ** the "time" argument is mandatory! (try "now") **

You can also call "cmd" directly instead of using this wrapper.

cinit_usage

}

if [ "$#" -lt 1 ]; then
   usage
fi

# getopt!
while [ "$#" -gt 1 ]; do
   arg="$1"; shift

   case "${arg}" in
      -a|-F|-f|-H|-n)
         _exit "Sorry, ${arg} is not implemented."
      ;;
      -t)
         if [ "$#" -lt 1 ]; then
            _eexit "-t needs the time argument"
   esac
done
