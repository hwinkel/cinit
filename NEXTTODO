- Doc.next:
   - installing: report!
   configuring.cinit
- Doc
   * the conf/ system: conf-system.text
   * paths.text
   * current-init-problems.text
   * profiles.text (profile.support)
   * 'example-directory-structure.text'
   * 'dependencies.text'
   * 'os-integration.text'
- Begin documentation
   * Check Makefile
   * Integrate Makefile into main Makefile
   * create manpage
   * Write a small manual
      - install
      - configure
      - boot (different OS)
   * generate asciidoc!
- report broken links in needs/wants
- Doc way:
   * installing
   * configuring
      - testconfig!
   * booting
      - different OS / bootloader
   * debugging
- Shutdomn code:
   * begin at init, then shutdown wants/needs, ...
- check free on dep_del!
- check that the new wants and need elements are nserted the other way round
   * we go to next, elements must be put before us!
- implement do_reboot()
   * so not only booting with cinit works, but also the shutdown
- define messages
   a) human readable
   b) binary data?
- replace cinit_ipc_logon with cinit_ipc_init...
   * delay ipc code -> after start!
- Remove old code
   * remove run_svc
   * remove run_init_svc

Finally:
- test and release cinit-0.3rc1

- Cleanup object lists
   object-lists/
      cinit
      cservice
      ccontrol
      cinit.halt
      cinit.reboot
      cinit.shutdown (shell script?!?)
