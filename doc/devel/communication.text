cinit - communication
=====================
Nico Schottelius <nico-linux-cinit__@__schottelius.org>
0.1 for cinit-0.3, Initial version: 2006-08-11
:Author Initials: NS

This document describes the internal communication of cinit.
It is thought to be read by developers.


Introduction
------------
This document describes the messages used between cinit, cinit forks
and other programs that want to talk to cinit. It does NOT
describe the communication method, but only the messages sent
(for the communication method read "ipc.text").

Document status
~~~~~~~~~~~~~~~
This document is still being written, it is not finished.


About Messages
--------------

Order
~~~~~
The client always initiates the communication.
cinit will begin listening to messages directly after its start.

Data
~~~~~
A message always conists of a predefined structure (see src/headers/comm.h).
The byte order is host specific (may be little or big endian).


The messages
------------

The client always uses the same structure (struct msg_client) to contact
cinit. This way cinit does not need to handle dynamic data structures.

cinit in contrast delivers different data structures to its clients,
depending on the question.

Question: Start a service (and its dependencies)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This command is issued either by a cinit fork or by a general client.
cinit will start a fork, which tries to start the service and its dependencies.

The client must provide cinit with the following information:
. Name of the service to be started
. Reason why to start it
. eventually additional information (see below)

The structure send is "asw_sstatus".

The reason
^^^^^^^^^^
Can be one of:
- RS_NONE   (it's a manual start request)
- RS_WANTS  (a currently starting service wants to start this service)
- RS_NEEDS  (a currently starting service needs to start this service)

If the reason is RS_WANTS or RS_NEEDS the client must supply the name
of the service, which wants it to be started.

Question: Start a service (nothing else)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This command may only be issued by an external client.
cinit will start a fork, which tries to start the service and which will
report the status back.


Answer: Return short status of a service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This answer is used as a response to:
- Start a service (and its dependencies)
- Start a service (nothing else)

cinit only responds the status of the asked service.
The structure send is "asw_sstatus", which only include a status byte.


